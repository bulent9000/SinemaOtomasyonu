<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aILHAE3C/9k=
</value>
  </data>
</root>